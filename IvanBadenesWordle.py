# -*- coding: utf-8 -*-
"""Copia de Untitled5.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/19DA1WFYUo0nnAjbah5wEkb5E8HX5Q_iR
"""

import random
abcd=["a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z"]
words = []
board = []
again = True


#El documento palabras.txt dispone de 8913 de palabras ordenadas alfabeticamente en una columna.
#Al leer el documento palabras.txt, dichas alabras seran almacenadas en un diccionario que
#tiene como clave la letra por la que empiezn las palabras y como valor un array de todas las
#palabras que empiezan por dicha letar obtenidas del documento palabras.txt.
#De este modo se evita tener buscar en el peor der los casos entre 8913 palabras en cada
#busqueda realizada durante la partida de Worle.
def read_words():
  #Se lee el documento txt
  tidy = []
  tidydic = {}
  f = open('palabras.txt', 'r')
  words = f.read()
  words = words.split()
  j = 0
  #Se ordenan alfabeticament, todas las palabras obtenidas en el txt, en el diccionario.
  for i in words:
    if i[0] == abcd[j]:
      tidy.append(i)
    else:
      tidydic[abcd[j]] = tidy
      j = j+1
      tidy = []
  tidydic['z'] = tidy
  f.close()
  return tidydic, words

#Se obtiene una palabra aleatoria de entre todas.
def random_word(words):
  rnd = random.randint(0, len(words))
  word = words[rnd]
  return word

#Se verifica que existe dicha palabra dentro de las posibles palabras.
def buscar(word, tidydic):
  #word = word.lower()
  matrix = tidydic[word[0]]
  for palabra in matrix:
    if palabra == word:
      return True
  return False

def in_spot(letter: str):#Verde
  return f"\033[1m\033[42m\033[030m{letter.upper()}\033[0m"

def not_in_spot(letter: str):#Amarillo
  return f"\033[1m\033[43m\033[030m{letter.upper()}\033[0m"

def not_in_word(letter: str):#Gris
  return f"\033[1m\033[47m\033[030m{letter.upper()}\033[0m"
#Se muestra por pantalla el tablero de Wordle
def draw():
  for i in range(5):
    print(" ".join(board[i]))

#Se inicializa el tablero de Wordle.
def init():
  board = []
  for i in range(5):
    board.append('-----')
  return board

#Juego de Wordle
def game(word, tidydic):
  count = 0
  win = False
  while (win == False) and( count < 5):
    text = input("Escribe una palabra de 5 letras.")
    text = text.lower()
    if(len(text) != 0):
      if(buscar(text,tidydic)):
        while len(text) != 5:
          text = input("La palabra escrita no contiene 5 letras")
          text = text.lower()
        if word == text:#Verde
          board[count] = [in_spot(l) for l in text]
          win = True
        else:
          luck = []
          for x in range(5):
            if text[x] == word[x]:#Verde
              luck.append(in_spot(text[x]))
            elif text[x] in word:#Amarillo
              luck.append(not_in_spot(text[x]))
            else:                   #Gris
              luck.append(not_in_word(text[x]))
          board[count] = luck
        draw()
        count += 1
  end_game(win, word)
  return win

def end_game(win, word):
  if win:
    print('Ganaste la partida!!!')
  else:
    print('Game Over!')
    print('La palabra es: ' + word)


while again:
  tidydic, words = read_words()
  word = random_word(words)
  #print(word)
  board = init()
  draw()
  #print(board)
  win = game(word, tidydic)
  text = input('Para realizar otra partida pulse s o S, para terminar el juego pulse cualquier otra tecla.')
  text = text.lower()
  if(text == 's'):
    again = True
  else:
    again = False